#pragma once

enum class Register : uint32_t
{
    r0 = 0,
    r1,
    r2,
    r3,
    r4,
    r5,
    r6,
    r7,
    r8,
    r9,
    r10,
    r11,
    r12,
    r13,
    r14,
    r15,
    s0 = 16,
    s1,
    s2,
    s3,
    s4,
    s5,
    s6,
    s7,
    s8,
    s9,
    s10,
    s11,
    s12,
    s13,
    s14,
    s15,
    None = 0xff
};

enum class OpCode : uint32_t
{
    IMM,
    ADD,
    ADC,
    SUB,
    SBB,
    AND,
    OR,
    XOR,
    SLA,
    SLX,
    SL0,
    SL1,
    RL,
    SRA,
    SRX,
    SR0,
    SR1,
    RR,
    CMP,
    TEST,
    LOAD,
    MUL,
    MULS,
    DIV,
    DIVS,
    BSL,
    BSR,
    FMUL,
    FDIV,
    FADD,
    FSUB,
    FCMP,
    FINT,
    FFLT,
    NOP,
    SLEEP,
    JUMP,
    JUMPZ,
    JUMPC,
    JUMPNZ,
    JUMPNC,
    CALL,
    CALLZ,
    CALLC,
    CALLNZ,
    CALLNC,
    SVC,
    RET,
    RETI,
    RETE,
    LDW,
    STW,
    LDSPR,
    STSPR,
    OUT,
    IN,
    None
};

enum class PseudoOp : uint32_t
{
    ORG,
    ALIGN,
    DB,
    DW,
    DD,
    None
};

